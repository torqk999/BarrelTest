; Listing generated by Microsoft (R) Optimizing Compiler Version 19.39.33523.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	ThreadHandle_TypeID:BYTE:018H
COMM	barrelService_ThreadBin:BYTE:0100H
COMM	barrelService_QueBin:BYTE:0200H
_DATA	ENDS
msvcjmc	SEGMENT
__9C67CA7D_tEnums@h DB 01H
__EAEE5CFA_tDefines@h DB 01H
__0ED14FEE_winpackagefamily@h DB 01H
__F92EF742_winapifamily@h DB 01H
__22E515EB_sdkddkver@h DB 01H
__FE09AF47_concurrencysal@h DB 01H
__C073CA79_sal@h DB 01H
__D6AFE870_vadefs@h DB 01H
__D63E96CF_vcruntime@h DB 01H
__514B86D7_excpt@h DB 01H
__9A7D38D9_stdarg@h DB 01H
__29F49F40_specstrings_undef@h DB 01H
__D0F42932_specstrings_strict@h DB 01H
__F00405FD_sdv_driverspecs@h DB 01H
__173E09CA_driverspecs@h DB 01H
__9A452361_specstrings@h DB 01H
__1B0272D9_corecrt@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__1EC467ED_ctype@h DB 01H
__98517906_kernelspecs@h DB 01H
__D3497022_basetsd@h DB 01H
__61CC25A1_errno@h DB 01H
__3EADF068_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__7FCB5136_guiddef@h DB 01H
__FF8A9E11_pshpack4@h DB 01H
__D5438902_poppack@h DB 01H
__FB07E2A3_pshpack2@h DB 01H
__F6906775_pshpack8@h DB 01H
__F9415CFA_pshpack1@h DB 01H
__E58C6F1C_apiset@h DB 01H
__A5C52262_ktmtypes@h DB 01H
__FBBA8F9D_winnt@h DB 01H
__A32D3D2C_minwindef@h DB 01H
__7D798299_windef@h DB 01H
__9AE108E9_apisetcconv@h DB 01H
__9CE53D2C_minwinbase@h DB 01H
__5D0AA210_apiquery2@h DB 01H
__4DD4E726_processenv@h DB 01H
__3575CC96_fileapi@h DB 01H
__8EA220E6_fileapifromapp@h DB 01H
__BF9B31FE_debugapi@h DB 01H
__C3AFE134_utilapiset@h DB 01H
__76F69E51_handleapi@h DB 01H
__7E63D784_errhandlingapi@h DB 01H
__FFA7003C_fibersapi@h DB 01H
__8971CECF_namedpipeapi@h DB 01H
__46C9D8A6_profileapi@h DB 01H
__98D4F0A3_heapapi@h DB 01H
__50EF2A88_ioapiset@h DB 01H
__92EA1464_synchapi@h DB 01H
__A53D8AED_interlockedapi@h DB 01H
__B506CAAF_processthreadsapi@h DB 01H
__FF735694_sysinfoapi@h DB 01H
__29589789_memoryapi@h DB 01H
__E9C7A663_enclaveapi@h DB 01H
__D035F9F7_threadpoollegacyapiset@h DB 01H
__C899130C_threadpoolapiset@h DB 01H
__E0441EE7_jobapi@h DB 01H
__CEF86838_jobapi2@h DB 01H
__35AC6B9A_wow64apiset@h DB 01H
__C8AE41A5_libloaderapi@h DB 01H
__CC9E232D_securitybaseapi@h DB 01H
__C9D0C9B8_namespaceapi@h DB 01H
__30FF9CAD_systemtopologyapi@h DB 01H
__4D358795_processtopologyapi@h DB 01H
__40446D10_securityappcontainer@h DB 01H
__3A952EDF_realtimeapiset@h DB 01H
__F4865F4B_winerror@h DB 01H
__53C1BD93_timezoneapi@h DB 01H
__1FFBEDBF_winbase@h DB 01H
__43D3FA34_wingdi@h DB 01H
__D24A7391_tvout@h DB 01H
__7713A6C8_winuser@h DB 01H
__0B345F71_datetimeapi@h DB 01H
__9AC6960C_winnls@h DB 01H
__973A40A8_stringapiset@h DB 01H
__CC46FEE2_wincontypes@h DB 01H
__97D70BE1_consoleapi@h DB 01H
__27EC5E18_consoleapi2@h DB 01H
__262E342F_consoleapi3@h DB 01H
__641DCD70_wincon@h DB 01H
__5A96C7A7_verrsrc@h DB 01H
__B69C6FF2_winver@h DB 01H
__7AEB8C37_reason@h DB 01H
__59F1A8A9_winreg@h DB 01H
__EE0E2B7F_wnnc@h DB 01H
__DCDB7054_winnetwk@h DB 01H
__EDC72EEB_cderr@h DB 01H
__95F9199D_dde@h DB 01H
__66427627_ddeml@h DB 01H
__957C29A0_dlgs@h DB 01H
__12EA15AF_lzexpand@h DB 01H
__62131F15_mmsyscom@h DB 01H
__47E68D49_mciapi@h DB 01H
__5D7DD356_mmiscapi@h DB 01H
__7223D2EF_mmiscapi2@h DB 01H
__A330DBB3_playsoundapi@h DB 01H
__601B366F_mmeapi@h DB 01H
__1134ADD5_timeapi@h DB 01H
__93F2265A_joystickapi@h DB 01H
__DF6EB4E3_mmsystem@h DB 01H
__BD641FCB_nb30@h DB 01H
__DF8704F0_rpcdcep@h DB 01H
__5C6CA7BB_rpcdce@h DB 01H
__853533C4_rpcnsi@h DB 01H
__2D2406C3_rpcnterr@h DB 01H
__64521D71_rpcasync@h DB 01H
__AADCBA08_rpc@h DB 01H
__19E26CFF_shellapi@h DB 01H
__1E9F31D3_winperf@h DB 01H
__832A4112_inaddr@h DB 01H
__32C6F875_winsock@h DB 01H
__7953A3F8_bcrypt@h DB 01H
__E4169492_ncrypt@h DB 01H
__AF3DDDC3_dpapi@h DB 01H
__D1E23BF2_wincrypt@h DB 01H
__82AB4779_winefs@h DB 01H
__1FE431C9_rpcnsip@h DB 01H
__2B741F2D_rpcsal@h DB 01H
__92623256_rpcndr@h DB 01H
__9C18532E_wtypesbase@h DB 01H
__EA2E1D6D_wtypes@h DB 01H
__7DDD9F45_winioctl@h DB 01H
__E550A843_winsmcrd@h DB 01H
__9809C1BA_winscard@h DB 01H
__EA174FA4_prsht@h DB 01H
__0E1BD114_winspool@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__10D4A829_limits@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__30B1AFDA_unknwnbase@h DB 01H
__328C1996_objidlbase@h DB 01H
__C4E06B6A_cguid@h DB 01H
__434718C5_combaseapi@h DB 01H
__DE6FDEF1_unknwn@h DB 01H
__CCE0BACC_objidl@h DB 01H
__8C7011E5_oaidl@h DB 01H
__2E0B7863_propidlbase@h DB 01H
__BF4CF2EC_coml2api@h DB 01H
__6D897344_oleidl@h DB 01H
__1129FC2C_servprov@h DB 01H
__757952E4_msxml@h DB 01H
__B1191D53_urlmon@h DB 01H
__404D1A47_propidl@h DB 01H
__A1C63593_objbase@h DB 01H
__C1B0A9CB_oleauto@h DB 01H
__24EAF61F_ole2@h DB 01H
__2B1843DA_commdlg@h DB 01H
__81DDEDE3_stralign@h DB 01H
__2134D1B4_winsvc@h DB 01H
__11C07376_mcx@h DB 01H
__577CE3E7_ime_cmodes@h DB 01H
__1E72C31E_imm@h DB 01H
__63AA7AF5_Windows@h DB 01H
__4EC676C0_tModules@h DB 01H
__AFB9CF29_tPreent@h DB 01H
__366DFDC4_tHelpers@h DB 01H
__D300D227_tTypeInfo@h DB 01H
__03948348_tThreads@h DB 01H
__978ECD68_tServices@h DB 01H
__FEADC134_tHeap@h DB 01H
__296E417C_tChunk@h DB 01H
__7CF1EC1E_tCollection@h DB 01H
__CE367354_tBarrel@h DB 01H
__EAE81D8C_tBucket@h DB 01H
__9A4426E4_tUserCollection@h DB 01H
__E8844C26_tMutation@h DB 01H
__7C7B8CA4_MutationTest@h DB 01H
__EBA9552C_MutationTest@c DB 01H
msvcjmc	ENDS
PUBLIC	mutationTest
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_05NCJLPPFE@char?$CK@			; `string'
PUBLIC	??_C@_04MEMAJGDJ@name@				; `string'
PUBLIC	??_C@_05KNFBNCOH@float@				; `string'
PUBLIC	??_C@_06KJINILIP@health@			; `string'
PUBLIC	??_C@_05DCHFACKC@pos_X@				; `string'
PUBLIC	??_C@_05CLGODDOD@pos_Y@				; `string'
PUBLIC	??_C@_05EDGACA@pos_Z@				; `string'
PUBLIC	??_C@_0O@HAFDNFOP@BaseCharacter@		; `string'
PUBLIC	??_C@_07HKKOCJJL@stamina@			; `string'
PUBLIC	??_C@_07DFKLKNJN@Warrior@			; `string'
PUBLIC	??_C@_04OFEKJHLE@mana@				; `string'
PUBLIC	??_C@_04EPDGEGDL@Mage@				; `string'
EXTRN	paramCount:PROC
EXTRN	Property_Get:PROC
EXTRN	TypeInfo_Get:PROC
EXTRN	Mutagen_Create:PROC
EXTRN	GenePool_Create:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$mutationTest DD imagerel $LN3
	DD	imagerel $LN3+1528
	DD	imagerel $unwind$mutationTest
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_04EPDGEGDL@Mage@
CONST	SEGMENT
??_C@_04EPDGEGDL@Mage@ DB 'Mage', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04OFEKJHLE@mana@
CONST	SEGMENT
??_C@_04OFEKJHLE@mana@ DB 'mana', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07DFKLKNJN@Warrior@
CONST	SEGMENT
??_C@_07DFKLKNJN@Warrior@ DB 'Warrior', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HKKOCJJL@stamina@
CONST	SEGMENT
??_C@_07HKKOCJJL@stamina@ DB 'stamina', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HAFDNFOP@BaseCharacter@
CONST	SEGMENT
??_C@_0O@HAFDNFOP@BaseCharacter@ DB 'BaseCharacter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05EDGACA@pos_Z@
CONST	SEGMENT
??_C@_05EDGACA@pos_Z@ DB 'pos_Z', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05CLGODDOD@pos_Y@
CONST	SEGMENT
??_C@_05CLGODDOD@pos_Y@ DB 'pos_Y', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05DCHFACKC@pos_X@
CONST	SEGMENT
??_C@_05DCHFACKC@pos_X@ DB 'pos_X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06KJINILIP@health@
CONST	SEGMENT
??_C@_06KJINILIP@health@ DB 'health', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KNFBNCOH@float@
CONST	SEGMENT
??_C@_05KNFBNCOH@float@ DB 'float', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MEMAJGDJ@name@
CONST	SEGMENT
??_C@_04MEMAJGDJ@name@ DB 'name', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05NCJLPPFE@char?$CK@
CONST	SEGMENT
??_C@_05NCJLPPFE@char?$CK@ DB 'char*', 00H		; `string'
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02bH
	DW	05deH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$mutationTest DD 035063219H
	DD	010b3310H
	DD	0700400f2H
	DD	050026003H
	DD	imagerel __GSHandlerCheck
	DD	0788H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
mutationTest$rtcName$0 DB 06dH
	DB	079H
	DB	047H
	DB	065H
	DB	06eH
	DB	065H
	DB	050H
	DB	06fH
	DB	06fH
	DB	06cH
	DB	00H
	ORG $+1
mutationTest$rtcName$1 DB 024H
	DB	053H
	DB	031H
	DB	00H
mutationTest$rtcName$2 DB 024H
	DB	053H
	DB	032H
	DB	00H
mutationTest$rtcName$3 DB 024H
	DB	053H
	DB	033H
	DB	00H
mutationTest$rtcName$4 DB 024H
	DB	053H
	DB	034H
	DB	00H
mutationTest$rtcName$5 DB 024H
	DB	053H
	DB	035H
	DB	00H
mutationTest$rtcName$6 DB 024H
	DB	053H
	DB	036H
	DB	00H
mutationTest$rtcName$7 DB 024H
	DB	053H
	DB	037H
	DB	00H
mutationTest$rtcName$8 DB 024H
	DB	053H
	DB	038H
	DB	00H
mutationTest$rtcName$9 DB 024H
	DB	053H
	DB	039H
	DB	00H
mutationTest$rtcName$10 DB 024H
	DB	053H
	DB	031H
	DB	030H
	DB	00H
	ORG $+3
mutationTest$rtcName$11 DB 024H
	DB	053H
	DB	031H
	DB	031H
	DB	00H
	ORG $+3
mutationTest$rtcName$12 DB 024H
	DB	053H
	DB	031H
	DB	032H
	DB	00H
	ORG $+3
mutationTest$rtcName$13 DB 024H
	DB	053H
	DB	031H
	DB	033H
	DB	00H
	ORG $+3
mutationTest$rtcName$14 DB 024H
	DB	053H
	DB	031H
	DB	034H
	DB	00H
	ORG $+11
mutationTest$rtcVarDesc DD 03a4H
	DD	02H
	DQ	FLAT:mutationTest$rtcName$14
	DD	0384H
	DD	02H
	DQ	FLAT:mutationTest$rtcName$13
	DD	0368H
	DD	08H
	DQ	FLAT:mutationTest$rtcName$12
	DD	0348H
	DD	08H
	DQ	FLAT:mutationTest$rtcName$11
	DD	0324H
	DD	02H
	DQ	FLAT:mutationTest$rtcName$10
	DD	0304H
	DD	02H
	DQ	FLAT:mutationTest$rtcName$9
	DD	02e8H
	DD	08H
	DQ	FLAT:mutationTest$rtcName$8
	DD	02c8H
	DD	08H
	DQ	FLAT:mutationTest$rtcName$7
	DD	02a4H
	DD	06H
	DQ	FLAT:mutationTest$rtcName$6
	DD	0284H
	DD	06H
	DQ	FLAT:mutationTest$rtcName$5
	DD	0248H
	DD	028H
	DQ	FLAT:mutationTest$rtcName$4
	DD	0208H
	DD	028H
	DQ	FLAT:mutationTest$rtcName$3
	DD	0110H
	DD	0d8H
	DQ	FLAT:mutationTest$rtcName$2
	DD	0b0H
	DD	040H
	DQ	FLAT:mutationTest$rtcName$1
	DD	040H
	DD	050H
	DQ	FLAT:mutationTest$rtcName$0
	ORG $+720
mutationTest$rtcFrameData DD 0fH
	DD	00H
	DQ	FLAT:mutationTest$rtcVarDesc
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Repos\BarrelTest\MutationTest.c
;	COMDAT mutationTest
_TEXT	SEGMENT
myGenePool$ = 16
$S1$ = 128
$S2$ = 224
$S3$ = 472
$S4$ = 536
$S5$ = 596
$S6$ = 628
$S7$ = 664
$S8$ = 696
$S9$ = 724
$S10$ = 756
$S11$ = 792
$S12$ = 824
$S13$ = 852
$S14$ = 884
$T18 = 1496
$T19 = 1592
$T20 = 1688
$T21 = 1784
__$ArrayPad$ = 1880
mutationTest PROC					; COMDAT

; 3    : void mutationTest(){

$LN3:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 81 ec 90 07
	00 00		 sub	 rsp, 1936		; 00000790H
  0000b	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00010	48 8d 7c 24 30	 lea	 rdi, QWORD PTR [rsp+48]
  00015	b9 48 01 00 00	 mov	 ecx, 328		; 00000148H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00028	48 33 c5	 xor	 rax, rbp
  0002b	48 89 85 58 07
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00032	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EBA9552C_MutationTest@c
  00039	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4    : 
; 5    : 	/*
; 6    : 	
; 7    : 		GenePool myGenePool =
; 8    : 		GENE_POOL(3,
; 9    : 			MUTAGEN("BaseCharacter",
; 10   : 				PROP_INFO(name, char*),
; 11   : 				PROP_INFO(health, float),
; 12   : 				PROP_INFO(pos_X, float),
; 13   : 				PROP_INFO(pos_Y, float),
; 14   : 				PROP_INFO(pos_Z, float)
; 15   : 			),
; 16   : 			MUTAGEN("Warrior",
; 17   : 				PROP_INFO(stamina, float)
; 18   : 			),
; 19   : 			MUTAGEN("Mage",
; 20   : 				PROP_INFO(mana, float)
; 21   : 			)
; 22   : 		);
; 23   : 
; 24   : 	*/
; 25   : 
; 26   : 	GenePool myGenePool =

  0003e	ba 08 00 00 00	 mov	 edx, 8
  00043	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05NCJLPPFE@char?$CK@
  0004a	e8 00 00 00 00	 call	 TypeInfo_Get
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04MEMAJGDJ@name@
  00059	e8 00 00 00 00	 call	 Property_Get
  0005e	88 85 74 02 00
	00		 mov	 BYTE PTR $S6$[rbp], al
  00064	ba 04 00 00 00	 mov	 edx, 4
  00069	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  00070	e8 00 00 00 00	 call	 TypeInfo_Get
  00075	48 8b d0	 mov	 rdx, rax
  00078	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_06KJINILIP@health@
  0007f	e8 00 00 00 00	 call	 Property_Get
  00084	88 85 75 02 00
	00		 mov	 BYTE PTR $S6$[rbp+1], al
  0008a	ba 04 00 00 00	 mov	 edx, 4
  0008f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  00096	e8 00 00 00 00	 call	 TypeInfo_Get
  0009b	48 8b d0	 mov	 rdx, rax
  0009e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05DCHFACKC@pos_X@
  000a5	e8 00 00 00 00	 call	 Property_Get
  000aa	88 85 76 02 00
	00		 mov	 BYTE PTR $S6$[rbp+2], al
  000b0	ba 04 00 00 00	 mov	 edx, 4
  000b5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  000bc	e8 00 00 00 00	 call	 TypeInfo_Get
  000c1	48 8b d0	 mov	 rdx, rax
  000c4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05CLGODDOD@pos_Y@
  000cb	e8 00 00 00 00	 call	 Property_Get
  000d0	88 85 77 02 00
	00		 mov	 BYTE PTR $S6$[rbp+3], al
  000d6	ba 04 00 00 00	 mov	 edx, 4
  000db	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  000e2	e8 00 00 00 00	 call	 TypeInfo_Get
  000e7	48 8b d0	 mov	 rdx, rax
  000ea	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05EDGACA@pos_Z@
  000f1	e8 00 00 00 00	 call	 Property_Get
  000f6	88 85 78 02 00
	00		 mov	 BYTE PTR $S6$[rbp+4], al
  000fc	c6 85 79 02 00
	00 01		 mov	 BYTE PTR $S6$[rbp+5], 1
  00103	ba 08 00 00 00	 mov	 edx, 8
  00108	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05NCJLPPFE@char?$CK@
  0010f	e8 00 00 00 00	 call	 TypeInfo_Get
  00114	48 8b d0	 mov	 rdx, rax
  00117	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04MEMAJGDJ@name@
  0011e	e8 00 00 00 00	 call	 Property_Get
  00123	88 85 54 02 00
	00		 mov	 BYTE PTR $S5$[rbp], al
  00129	ba 04 00 00 00	 mov	 edx, 4
  0012e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  00135	e8 00 00 00 00	 call	 TypeInfo_Get
  0013a	48 8b d0	 mov	 rdx, rax
  0013d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_06KJINILIP@health@
  00144	e8 00 00 00 00	 call	 Property_Get
  00149	88 85 55 02 00
	00		 mov	 BYTE PTR $S5$[rbp+1], al
  0014f	ba 04 00 00 00	 mov	 edx, 4
  00154	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  0015b	e8 00 00 00 00	 call	 TypeInfo_Get
  00160	48 8b d0	 mov	 rdx, rax
  00163	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05DCHFACKC@pos_X@
  0016a	e8 00 00 00 00	 call	 Property_Get
  0016f	88 85 56 02 00
	00		 mov	 BYTE PTR $S5$[rbp+2], al
  00175	ba 04 00 00 00	 mov	 edx, 4
  0017a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  00181	e8 00 00 00 00	 call	 TypeInfo_Get
  00186	48 8b d0	 mov	 rdx, rax
  00189	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05CLGODDOD@pos_Y@
  00190	e8 00 00 00 00	 call	 Property_Get
  00195	88 85 57 02 00
	00		 mov	 BYTE PTR $S5$[rbp+3], al
  0019b	ba 04 00 00 00	 mov	 edx, 4
  001a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  001a7	e8 00 00 00 00	 call	 TypeInfo_Get
  001ac	48 8b d0	 mov	 rdx, rax
  001af	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05EDGACA@pos_Z@
  001b6	e8 00 00 00 00	 call	 Property_Get
  001bb	88 85 58 02 00
	00		 mov	 BYTE PTR $S5$[rbp+4], al
  001c1	c6 85 59 02 00
	00 00		 mov	 BYTE PTR $S5$[rbp+5], 0
  001c8	ba 08 00 00 00	 mov	 edx, 8
  001cd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05NCJLPPFE@char?$CK@
  001d4	e8 00 00 00 00	 call	 TypeInfo_Get
  001d9	48 8b d0	 mov	 rdx, rax
  001dc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04MEMAJGDJ@name@
  001e3	e8 00 00 00 00	 call	 Property_Get
  001e8	48 89 85 18 02
	00 00		 mov	 QWORD PTR $S4$[rbp], rax
  001ef	ba 04 00 00 00	 mov	 edx, 4
  001f4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  001fb	e8 00 00 00 00	 call	 TypeInfo_Get
  00200	48 8b d0	 mov	 rdx, rax
  00203	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_06KJINILIP@health@
  0020a	e8 00 00 00 00	 call	 Property_Get
  0020f	48 89 85 20 02
	00 00		 mov	 QWORD PTR $S4$[rbp+8], rax
  00216	ba 04 00 00 00	 mov	 edx, 4
  0021b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  00222	e8 00 00 00 00	 call	 TypeInfo_Get
  00227	48 8b d0	 mov	 rdx, rax
  0022a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05DCHFACKC@pos_X@
  00231	e8 00 00 00 00	 call	 Property_Get
  00236	48 89 85 28 02
	00 00		 mov	 QWORD PTR $S4$[rbp+16], rax
  0023d	ba 04 00 00 00	 mov	 edx, 4
  00242	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  00249	e8 00 00 00 00	 call	 TypeInfo_Get
  0024e	48 8b d0	 mov	 rdx, rax
  00251	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05CLGODDOD@pos_Y@
  00258	e8 00 00 00 00	 call	 Property_Get
  0025d	48 89 85 30 02
	00 00		 mov	 QWORD PTR $S4$[rbp+24], rax
  00264	ba 04 00 00 00	 mov	 edx, 4
  00269	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  00270	e8 00 00 00 00	 call	 TypeInfo_Get
  00275	48 8b d0	 mov	 rdx, rax
  00278	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05EDGACA@pos_Z@
  0027f	e8 00 00 00 00	 call	 Property_Get
  00284	48 89 85 38 02
	00 00		 mov	 QWORD PTR $S4$[rbp+32], rax
  0028b	ba 08 00 00 00	 mov	 edx, 8
  00290	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05NCJLPPFE@char?$CK@
  00297	e8 00 00 00 00	 call	 TypeInfo_Get
  0029c	48 8b d0	 mov	 rdx, rax
  0029f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04MEMAJGDJ@name@
  002a6	e8 00 00 00 00	 call	 Property_Get
  002ab	48 89 85 d8 01
	00 00		 mov	 QWORD PTR $S3$[rbp], rax
  002b2	ba 04 00 00 00	 mov	 edx, 4
  002b7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  002be	e8 00 00 00 00	 call	 TypeInfo_Get
  002c3	48 8b d0	 mov	 rdx, rax
  002c6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_06KJINILIP@health@
  002cd	e8 00 00 00 00	 call	 Property_Get
  002d2	48 89 85 e0 01
	00 00		 mov	 QWORD PTR $S3$[rbp+8], rax
  002d9	ba 04 00 00 00	 mov	 edx, 4
  002de	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  002e5	e8 00 00 00 00	 call	 TypeInfo_Get
  002ea	48 8b d0	 mov	 rdx, rax
  002ed	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05DCHFACKC@pos_X@
  002f4	e8 00 00 00 00	 call	 Property_Get
  002f9	48 89 85 e8 01
	00 00		 mov	 QWORD PTR $S3$[rbp+16], rax
  00300	ba 04 00 00 00	 mov	 edx, 4
  00305	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  0030c	e8 00 00 00 00	 call	 TypeInfo_Get
  00311	48 8b d0	 mov	 rdx, rax
  00314	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05CLGODDOD@pos_Y@
  0031b	e8 00 00 00 00	 call	 Property_Get
  00320	48 89 85 f0 01
	00 00		 mov	 QWORD PTR $S3$[rbp+24], rax
  00327	ba 04 00 00 00	 mov	 edx, 4
  0032c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  00333	e8 00 00 00 00	 call	 TypeInfo_Get
  00338	48 8b d0	 mov	 rdx, rax
  0033b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05EDGACA@pos_Z@
  00342	e8 00 00 00 00	 call	 Property_Get
  00347	48 89 85 f8 01
	00 00		 mov	 QWORD PTR $S3$[rbp+32], rax
  0034e	48 8d 95 74 02
	00 00		 lea	 rdx, QWORD PTR $S6$[rbp]
  00355	48 8d 8d 54 02
	00 00		 lea	 rcx, QWORD PTR $S5$[rbp]
  0035c	e8 00 00 00 00	 call	 paramCount
  00361	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00365	4c 8d 8d 18 02
	00 00		 lea	 r9, QWORD PTR $S4$[rbp]
  0036c	4c 8d 85 d8 01
	00 00		 lea	 r8, QWORD PTR $S3$[rbp]
  00373	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@HAFDNFOP@BaseCharacter@
  0037a	48 8d 8d d8 05
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  00381	e8 00 00 00 00	 call	 Mutagen_Create
  00386	48 8d 8d e0 00
	00 00		 lea	 rcx, QWORD PTR $S2$[rbp]
  0038d	48 8b f9	 mov	 rdi, rcx
  00390	48 8b f0	 mov	 rsi, rax
  00393	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  00398	f3 a4		 rep movsb
  0039a	ba 04 00 00 00	 mov	 edx, 4
  0039f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  003a6	e8 00 00 00 00	 call	 TypeInfo_Get
  003ab	48 8b d0	 mov	 rdx, rax
  003ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_07HKKOCJJL@stamina@
  003b5	e8 00 00 00 00	 call	 Property_Get
  003ba	88 85 f4 02 00
	00		 mov	 BYTE PTR $S10$[rbp], al
  003c0	c6 85 f5 02 00
	00 01		 mov	 BYTE PTR $S10$[rbp+1], 1
  003c7	ba 04 00 00 00	 mov	 edx, 4
  003cc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  003d3	e8 00 00 00 00	 call	 TypeInfo_Get
  003d8	48 8b d0	 mov	 rdx, rax
  003db	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_07HKKOCJJL@stamina@
  003e2	e8 00 00 00 00	 call	 Property_Get
  003e7	88 85 d4 02 00
	00		 mov	 BYTE PTR $S9$[rbp], al
  003ed	c6 85 d5 02 00
	00 00		 mov	 BYTE PTR $S9$[rbp+1], 0
  003f4	ba 04 00 00 00	 mov	 edx, 4
  003f9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  00400	e8 00 00 00 00	 call	 TypeInfo_Get
  00405	48 8b d0	 mov	 rdx, rax
  00408	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_07HKKOCJJL@stamina@
  0040f	e8 00 00 00 00	 call	 Property_Get
  00414	48 89 85 b8 02
	00 00		 mov	 QWORD PTR $S8$[rbp], rax
  0041b	ba 04 00 00 00	 mov	 edx, 4
  00420	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  00427	e8 00 00 00 00	 call	 TypeInfo_Get
  0042c	48 8b d0	 mov	 rdx, rax
  0042f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_07HKKOCJJL@stamina@
  00436	e8 00 00 00 00	 call	 Property_Get
  0043b	48 89 85 98 02
	00 00		 mov	 QWORD PTR $S7$[rbp], rax
  00442	48 8d 95 f4 02
	00 00		 lea	 rdx, QWORD PTR $S10$[rbp]
  00449	48 8d 8d d4 02
	00 00		 lea	 rcx, QWORD PTR $S9$[rbp]
  00450	e8 00 00 00 00	 call	 paramCount
  00455	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00459	4c 8d 8d b8 02
	00 00		 lea	 r9, QWORD PTR $S8$[rbp]
  00460	4c 8d 85 98 02
	00 00		 lea	 r8, QWORD PTR $S7$[rbp]
  00467	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07DFKLKNJN@Warrior@
  0046e	48 8d 8d 38 06
	00 00		 lea	 rcx, QWORD PTR $T19[rbp]
  00475	e8 00 00 00 00	 call	 Mutagen_Create
  0047a	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $S2$[rbp+72]
  00481	48 8b f9	 mov	 rdi, rcx
  00484	48 8b f0	 mov	 rsi, rax
  00487	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  0048c	f3 a4		 rep movsb
  0048e	ba 04 00 00 00	 mov	 edx, 4
  00493	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  0049a	e8 00 00 00 00	 call	 TypeInfo_Get
  0049f	48 8b d0	 mov	 rdx, rax
  004a2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04OFEKJHLE@mana@
  004a9	e8 00 00 00 00	 call	 Property_Get
  004ae	88 85 74 03 00
	00		 mov	 BYTE PTR $S14$[rbp], al
  004b4	c6 85 75 03 00
	00 01		 mov	 BYTE PTR $S14$[rbp+1], 1
  004bb	ba 04 00 00 00	 mov	 edx, 4
  004c0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  004c7	e8 00 00 00 00	 call	 TypeInfo_Get
  004cc	48 8b d0	 mov	 rdx, rax
  004cf	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04OFEKJHLE@mana@
  004d6	e8 00 00 00 00	 call	 Property_Get
  004db	88 85 54 03 00
	00		 mov	 BYTE PTR $S13$[rbp], al
  004e1	c6 85 55 03 00
	00 00		 mov	 BYTE PTR $S13$[rbp+1], 0
  004e8	ba 04 00 00 00	 mov	 edx, 4
  004ed	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  004f4	e8 00 00 00 00	 call	 TypeInfo_Get
  004f9	48 8b d0	 mov	 rdx, rax
  004fc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04OFEKJHLE@mana@
  00503	e8 00 00 00 00	 call	 Property_Get
  00508	48 89 85 38 03
	00 00		 mov	 QWORD PTR $S12$[rbp], rax
  0050f	ba 04 00 00 00	 mov	 edx, 4
  00514	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KNFBNCOH@float@
  0051b	e8 00 00 00 00	 call	 TypeInfo_Get
  00520	48 8b d0	 mov	 rdx, rax
  00523	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04OFEKJHLE@mana@
  0052a	e8 00 00 00 00	 call	 Property_Get
  0052f	48 89 85 18 03
	00 00		 mov	 QWORD PTR $S11$[rbp], rax
  00536	48 8d 95 74 03
	00 00		 lea	 rdx, QWORD PTR $S14$[rbp]
  0053d	48 8d 8d 54 03
	00 00		 lea	 rcx, QWORD PTR $S13$[rbp]
  00544	e8 00 00 00 00	 call	 paramCount
  00549	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0054d	4c 8d 8d 38 03
	00 00		 lea	 r9, QWORD PTR $S12$[rbp]
  00554	4c 8d 85 18 03
	00 00		 lea	 r8, QWORD PTR $S11$[rbp]
  0055b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04EPDGEGDL@Mage@
  00562	48 8d 8d 98 06
	00 00		 lea	 rcx, QWORD PTR $T20[rbp]
  00569	e8 00 00 00 00	 call	 Mutagen_Create
  0056e	48 8d 8d 70 01
	00 00		 lea	 rcx, QWORD PTR $S2$[rbp+144]
  00575	48 8b f9	 mov	 rdi, rcx
  00578	48 8b f0	 mov	 rsi, rax
  0057b	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  00580	f3 a4		 rep movsb
  00582	48 8d 85 80 00
	00 00		 lea	 rax, QWORD PTR $S1$[rbp]
  00589	48 8b f8	 mov	 rdi, rax
  0058c	33 c0		 xor	 eax, eax
  0058e	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00593	f3 aa		 rep stosb
  00595	c7 44 24 20 03
	00 00 00	 mov	 DWORD PTR [rsp+32], 3
  0059d	41 b9 08 00 00
	00		 mov	 r9d, 8
  005a3	4c 8d 85 e0 00
	00 00		 lea	 r8, QWORD PTR $S2$[rbp]
  005aa	48 8d 95 80 00
	00 00		 lea	 rdx, QWORD PTR $S1$[rbp]
  005b1	48 8d 8d f8 06
	00 00		 lea	 rcx, QWORD PTR $T21[rbp]
  005b8	e8 00 00 00 00	 call	 GenePool_Create
  005bd	48 8d 4d 10	 lea	 rcx, QWORD PTR myGenePool$[rbp]
  005c1	48 8b f9	 mov	 rdi, rcx
  005c4	48 8b f0	 mov	 rsi, rax
  005c7	b9 50 00 00 00	 mov	 ecx, 80			; 00000050H
  005cc	f3 a4		 rep movsb

; 27   : 		GENE_POOL(3,
; 28   : 			MUTAGEN("BaseCharacter",
; 29   : 				PROP_INFO(name, char*),
; 30   : 				PROP_INFO(health, float),
; 31   : 				PROP_INFO(pos_X, float),
; 32   : 				PROP_INFO(pos_Y, float),
; 33   : 				PROP_INFO(pos_Z, float)
; 34   : 			),
; 35   : 			MUTAGEN("Warrior",
; 36   : 				PROP_INFO(stamina, float)
; 37   : 			),
; 38   : 			MUTAGEN("Mage",
; 39   : 				PROP_INFO(mana, float)
; 40   : 			)
; 41   : 		);
; 42   : 				
; 43   : }

  005ce	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  005d2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:mutationTest$rtcFrameData
  005d9	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  005de	48 8b 8d 58 07
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  005e5	48 33 cd	 xor	 rcx, rbp
  005e8	e8 00 00 00 00	 call	 __security_check_cookie
  005ed	48 8d a5 60 07
	00 00		 lea	 rsp, QWORD PTR [rbp+1888]
  005f4	5f		 pop	 rdi
  005f5	5e		 pop	 rsi
  005f6	5d		 pop	 rbp
  005f7	c3		 ret	 0
mutationTest ENDP
_TEXT	ENDS
END
