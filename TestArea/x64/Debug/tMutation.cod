; Listing generated by Microsoft (R) Optimizing Compiler Version 19.39.33523.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	ThreadHandle_TypeID:BYTE:018H
COMM	barrelService_ThreadBin:BYTE:0100H
COMM	barrelService_QueBin:BYTE:0200H
_DATA	ENDS
msvcjmc	SEGMENT
__9C67CA7D_tEnums@h DB 01H
__EAEE5CFA_tDefines@h DB 01H
__0ED14FEE_winpackagefamily@h DB 01H
__F92EF742_winapifamily@h DB 01H
__22E515EB_sdkddkver@h DB 01H
__FE09AF47_concurrencysal@h DB 01H
__C073CA79_sal@h DB 01H
__D6AFE870_vadefs@h DB 01H
__D63E96CF_vcruntime@h DB 01H
__514B86D7_excpt@h DB 01H
__9A7D38D9_stdarg@h DB 01H
__29F49F40_specstrings_undef@h DB 01H
__D0F42932_specstrings_strict@h DB 01H
__F00405FD_sdv_driverspecs@h DB 01H
__173E09CA_driverspecs@h DB 01H
__9A452361_specstrings@h DB 01H
__1B0272D9_corecrt@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__1EC467ED_ctype@h DB 01H
__98517906_kernelspecs@h DB 01H
__D3497022_basetsd@h DB 01H
__61CC25A1_errno@h DB 01H
__3EADF068_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__7FCB5136_guiddef@h DB 01H
__FF8A9E11_pshpack4@h DB 01H
__D5438902_poppack@h DB 01H
__FB07E2A3_pshpack2@h DB 01H
__F6906775_pshpack8@h DB 01H
__F9415CFA_pshpack1@h DB 01H
__E58C6F1C_apiset@h DB 01H
__A5C52262_ktmtypes@h DB 01H
__FBBA8F9D_winnt@h DB 01H
__A32D3D2C_minwindef@h DB 01H
__7D798299_windef@h DB 01H
__9AE108E9_apisetcconv@h DB 01H
__9CE53D2C_minwinbase@h DB 01H
__5D0AA210_apiquery2@h DB 01H
__4DD4E726_processenv@h DB 01H
__3575CC96_fileapi@h DB 01H
__8EA220E6_fileapifromapp@h DB 01H
__BF9B31FE_debugapi@h DB 01H
__C3AFE134_utilapiset@h DB 01H
__76F69E51_handleapi@h DB 01H
__7E63D784_errhandlingapi@h DB 01H
__FFA7003C_fibersapi@h DB 01H
__8971CECF_namedpipeapi@h DB 01H
__46C9D8A6_profileapi@h DB 01H
__98D4F0A3_heapapi@h DB 01H
__50EF2A88_ioapiset@h DB 01H
__92EA1464_synchapi@h DB 01H
__A53D8AED_interlockedapi@h DB 01H
__B506CAAF_processthreadsapi@h DB 01H
__FF735694_sysinfoapi@h DB 01H
__29589789_memoryapi@h DB 01H
__E9C7A663_enclaveapi@h DB 01H
__D035F9F7_threadpoollegacyapiset@h DB 01H
__C899130C_threadpoolapiset@h DB 01H
__E0441EE7_jobapi@h DB 01H
__CEF86838_jobapi2@h DB 01H
__35AC6B9A_wow64apiset@h DB 01H
__C8AE41A5_libloaderapi@h DB 01H
__CC9E232D_securitybaseapi@h DB 01H
__C9D0C9B8_namespaceapi@h DB 01H
__30FF9CAD_systemtopologyapi@h DB 01H
__4D358795_processtopologyapi@h DB 01H
__40446D10_securityappcontainer@h DB 01H
__3A952EDF_realtimeapiset@h DB 01H
__F4865F4B_winerror@h DB 01H
__53C1BD93_timezoneapi@h DB 01H
__1FFBEDBF_winbase@h DB 01H
__43D3FA34_wingdi@h DB 01H
__D24A7391_tvout@h DB 01H
__7713A6C8_winuser@h DB 01H
__0B345F71_datetimeapi@h DB 01H
__9AC6960C_winnls@h DB 01H
__973A40A8_stringapiset@h DB 01H
__CC46FEE2_wincontypes@h DB 01H
__97D70BE1_consoleapi@h DB 01H
__27EC5E18_consoleapi2@h DB 01H
__262E342F_consoleapi3@h DB 01H
__641DCD70_wincon@h DB 01H
__5A96C7A7_verrsrc@h DB 01H
__B69C6FF2_winver@h DB 01H
__7AEB8C37_reason@h DB 01H
__59F1A8A9_winreg@h DB 01H
__EE0E2B7F_wnnc@h DB 01H
__DCDB7054_winnetwk@h DB 01H
__EDC72EEB_cderr@h DB 01H
__95F9199D_dde@h DB 01H
__66427627_ddeml@h DB 01H
__957C29A0_dlgs@h DB 01H
__12EA15AF_lzexpand@h DB 01H
__62131F15_mmsyscom@h DB 01H
__47E68D49_mciapi@h DB 01H
__5D7DD356_mmiscapi@h DB 01H
__7223D2EF_mmiscapi2@h DB 01H
__A330DBB3_playsoundapi@h DB 01H
__601B366F_mmeapi@h DB 01H
__1134ADD5_timeapi@h DB 01H
__93F2265A_joystickapi@h DB 01H
__DF6EB4E3_mmsystem@h DB 01H
__BD641FCB_nb30@h DB 01H
__DF8704F0_rpcdcep@h DB 01H
__5C6CA7BB_rpcdce@h DB 01H
__853533C4_rpcnsi@h DB 01H
__2D2406C3_rpcnterr@h DB 01H
__64521D71_rpcasync@h DB 01H
__AADCBA08_rpc@h DB 01H
__19E26CFF_shellapi@h DB 01H
__1E9F31D3_winperf@h DB 01H
__832A4112_inaddr@h DB 01H
__32C6F875_winsock@h DB 01H
__7953A3F8_bcrypt@h DB 01H
__E4169492_ncrypt@h DB 01H
__AF3DDDC3_dpapi@h DB 01H
__D1E23BF2_wincrypt@h DB 01H
__82AB4779_winefs@h DB 01H
__1FE431C9_rpcnsip@h DB 01H
__2B741F2D_rpcsal@h DB 01H
__92623256_rpcndr@h DB 01H
__9C18532E_wtypesbase@h DB 01H
__EA2E1D6D_wtypes@h DB 01H
__7DDD9F45_winioctl@h DB 01H
__E550A843_winsmcrd@h DB 01H
__9809C1BA_winscard@h DB 01H
__EA174FA4_prsht@h DB 01H
__0E1BD114_winspool@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__10D4A829_limits@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__30B1AFDA_unknwnbase@h DB 01H
__328C1996_objidlbase@h DB 01H
__C4E06B6A_cguid@h DB 01H
__434718C5_combaseapi@h DB 01H
__DE6FDEF1_unknwn@h DB 01H
__CCE0BACC_objidl@h DB 01H
__8C7011E5_oaidl@h DB 01H
__2E0B7863_propidlbase@h DB 01H
__BF4CF2EC_coml2api@h DB 01H
__6D897344_oleidl@h DB 01H
__1129FC2C_servprov@h DB 01H
__757952E4_msxml@h DB 01H
__B1191D53_urlmon@h DB 01H
__404D1A47_propidl@h DB 01H
__A1C63593_objbase@h DB 01H
__C1B0A9CB_oleauto@h DB 01H
__24EAF61F_ole2@h DB 01H
__2B1843DA_commdlg@h DB 01H
__81DDEDE3_stralign@h DB 01H
__2134D1B4_winsvc@h DB 01H
__11C07376_mcx@h DB 01H
__577CE3E7_ime_cmodes@h DB 01H
__1E72C31E_imm@h DB 01H
__63AA7AF5_Windows@h DB 01H
__4EC676C0_tModules@h DB 01H
__AFB9CF29_tPreent@h DB 01H
__366DFDC4_tHelpers@h DB 01H
__D300D227_tTypeInfo@h DB 01H
__03948348_tThreads@h DB 01H
__978ECD68_tServices@h DB 01H
__FEADC134_tHeap@h DB 01H
__296E417C_tChunk@h DB 01H
__7CF1EC1E_tCollection@h DB 01H
__CE367354_tBarrel@h DB 01H
__EAE81D8C_tBucket@h DB 01H
__9A4426E4_tUserCollection@h DB 01H
__E8844C26_tMutation@h DB 01H
__7F5695AE_tMutation@c DB 01H
msvcjmc	ENDS
PUBLIC	Mutagen_Create
PUBLIC	Mutagen_ctor
PUBLIC	Mutation_Create
PUBLIC	Mutation_ctor
PUBLIC	GenePool_Create
PUBLIC	GenePool_ctor
PUBLIC	GenePool_GetMutant
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0L@FDLLLOLH@COLLECTION@			; `string'
PUBLIC	??_C@_08DDLBCDJK@PROPERTY@			; `string'
PUBLIC	??_C@_07LBGHJJFE@Mutagen@			; `string'
PUBLIC	??_C@_08PLJNIMIA@Mutation@			; `string'
PUBLIC	??_C@_04EHNLIFAM@uint@				; `string'
EXTRN	rawTranscribe:PROC
EXTRN	Barrel_GetUnitPtr:PROC
EXTRN	Barrel_Sourced:PROC
EXTRN	Barrel_ctor:PROC
EXTRN	Bucket_GetPtr:PROC
EXTRN	Bucket_Create:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$Mutagen_Create DD imagerel $LN3
	DD	imagerel $LN3+271
	DD	imagerel $unwind$Mutagen_Create
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$Mutagen_ctor DD imagerel $LN6
	DD	imagerel $LN6+325
	DD	imagerel $unwind$Mutagen_ctor
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$Mutation_Create DD imagerel $LN3
	DD	imagerel $LN3+144
	DD	imagerel $unwind$Mutation_Create
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$Mutation_ctor DD imagerel $LN3
	DD	imagerel $LN3+173
	DD	imagerel $unwind$Mutation_ctor
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$GenePool_Create DD imagerel $LN3
	DD	imagerel $LN3+326
	DD	imagerel $unwind$GenePool_Create
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$GenePool_ctor DD imagerel $LN3
	DD	imagerel $LN3+213
	DD	imagerel $unwind$GenePool_ctor
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$GenePool_GetMutant DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$GenePool_GetMutant
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_04EHNLIFAM@uint@
CONST	SEGMENT
??_C@_04EHNLIFAM@uint@ DB 'uint', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08PLJNIMIA@Mutation@
CONST	SEGMENT
??_C@_08PLJNIMIA@Mutation@ DB 'Mutation', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LBGHJJFE@Mutagen@
CONST	SEGMENT
??_C@_07LBGHJJFE@Mutagen@ DB 'Mutagen', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DDLBCDJK@PROPERTY@
CONST	SEGMENT
??_C@_08DDLBCDJK@PROPERTY@ DB 'PROPERTY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FDLLLOLH@COLLECTION@
CONST	SEGMENT
??_C@_0L@FDLLLOLH@COLLECTION@ DB 'COLLECTION', 00H	; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$GenePool_GetMutant DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	046H
	DB	0bbH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$GenePool_ctor DD 035064d19H
	DD	011e3323H
	DD	07017003aH
	DD	050156016H
	DD	imagerel __GSHandlerCheck
	DD	01c8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
GenePool_ctor$rtcName$0 DB 074H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+12
GenePool_ctor$rtcVarDesc DD 040H
	DD	050H
	DQ	FLAT:GenePool_ctor$rtcName$0
	ORG $+48
GenePool_ctor$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:GenePool_ctor$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$GenePool_Create DD 035063c01H
	DD	011e3323H
	DD	070170040H
	DD	050156016H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
GenePool_Create$rtcName$0 DB 024H
	DB	053H
	DB	033H
	DB	00H
	ORG $+4
GenePool_Create$rtcName$1 DB 05fH
	DB	05fH
	DB	024H
	DB	041H
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	050H
	DB	061H
	DB	064H
	DB	00H
	ORG $+12
GenePool_Create$rtcVarDesc DD 0a8H
	DD	08H
	DQ	FLAT:GenePool_Create$rtcName$1
	DD	040H
	DD	050H
	DQ	FLAT:GenePool_Create$rtcName$0
	ORG $+96
GenePool_Create$rtcFrameData DD 02H
	DD	00H
	DQ	FLAT:GenePool_Create$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03fH
	DB	094H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$Mutation_ctor DD 025054619H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
	DD	imagerel __GSHandlerCheck
	DD	0f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
Mutation_ctor$rtcName$0 DB 074H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+12
Mutation_ctor$rtcVarDesc DD 028H
	DD	08H
	DQ	FLAT:Mutation_ctor$rtcName$0
	ORG $+48
Mutation_ctor$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:Mutation_ctor$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	038H
	DB	077H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$Mutation_Create DD 025053f19H
	DD	01112316H
	DD	0700a0021H
	DD	05009H
	DD	imagerel __GSHandlerCheck
	DD	0f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
Mutation_Create$rtcName$0 DB 024H
	DB	053H
	DB	032H
	DB	00H
	ORG $+12
Mutation_Create$rtcVarDesc DD 028H
	DD	08H
	DQ	FLAT:Mutation_Create$rtcName$0
	ORG $+48
Mutation_Create$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:Mutation_Create$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	046H
	DW	012bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$Mutagen_ctor DD 035064d19H
	DD	011e3323H
	DD	07017003eH
	DD	050156016H
	DD	imagerel __GSHandlerCheck
	DD	01e0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
Mutagen_ctor$rtcName$0 DB 074H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+12
Mutagen_ctor$rtcVarDesc DD 040H
	DD	048H
	DQ	FLAT:Mutagen_ctor$rtcName$0
	ORG $+48
Mutagen_ctor$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:Mutagen_ctor$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$Mutagen_Create DD 035063c01H
	DD	011e3323H
	DD	070170040H
	DD	050156016H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
Mutagen_Create$rtcName$0 DB 024H
	DB	053H
	DB	031H
	DB	00H
	ORG $+4
Mutagen_Create$rtcName$1 DB 05fH
	DB	05fH
	DB	024H
	DB	041H
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	050H
	DB	061H
	DB	064H
	DB	00H
	ORG $+12
Mutagen_Create$rtcVarDesc DD 0a8H
	DD	08H
	DQ	FLAT:Mutagen_Create$rtcName$1
	DD	040H
	DD	048H
	DQ	FLAT:Mutagen_Create$rtcName$0
	ORG $+96
Mutagen_Create$rtcFrameData DD 02H
	DD	00H
	DQ	FLAT:Mutagen_Create$rtcVarDesc
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Repos\BarrelTest\tMutation.c
;	COMDAT GenePool_GetMutant
_TEXT	SEGMENT
mutationMask$ = 224
GenePool_GetMutant PROC					; COMDAT

; 53   : {

$LN3:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	57		 push	 rdi
  00006	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7F5695AE_tMutation@c
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 54   : 	return false;

  0001e	33 c0		 xor	 eax, eax

; 55   : }

  00020	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00027	5f		 pop	 rdi
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
GenePool_GetMutant ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Repos\BarrelTest\tMutation.c
;	COMDAT GenePool_ctor
_TEXT	SEGMENT
tmp$ = 16
$T4 = 312
__$ArrayPad$ = 408
poolLoc$ = 448
mutations$ = 456
mutagens$ = 464
mutCount$ = 472
genCount$ = 480
GenePool_ctor PROC					; COMDAT

; 44   : void GenePool_ctor(GenePool* poolLoc, Mutation* mutations, Mutagen* mutagens, uint mutCount, uint genCount) {

$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	56		 push	 rsi
  00016	57		 push	 rdi
  00017	48 81 ec d0 01
	00 00		 sub	 rsp, 464		; 000001d0H
  0001e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00023	48 8d 7c 24 30	 lea	 rdi, QWORD PTR [rsp+48]
  00028	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0002d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00032	f3 ab		 rep stosd
  00034	48 8b 8c 24 f8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+504]
  0003c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00043	48 33 c5	 xor	 rax, rbp
  00046	48 89 85 98 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0004d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7F5695AE_tMutation@c
  00054	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 45   : 
; 46   : 	GenePool tmp = GenePool_Create(mutations, mutagens, genCount, mutCount);

  00059	8b 85 d8 01 00
	00		 mov	 eax, DWORD PTR mutCount$[rbp]
  0005f	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00063	44 8b 8d e0 01
	00 00		 mov	 r9d, DWORD PTR genCount$[rbp]
  0006a	4c 8b 85 d0 01
	00 00		 mov	 r8, QWORD PTR mutagens$[rbp]
  00071	48 8b 95 c8 01
	00 00		 mov	 rdx, QWORD PTR mutations$[rbp]
  00078	48 8d 8d 38 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0007f	e8 00 00 00 00	 call	 GenePool_Create
  00084	48 8d 4d 10	 lea	 rcx, QWORD PTR tmp$[rbp]
  00088	48 8b f9	 mov	 rdi, rcx
  0008b	48 8b f0	 mov	 rsi, rax
  0008e	b9 50 00 00 00	 mov	 ecx, 80			; 00000050H
  00093	f3 a4		 rep movsb

; 47   : 	rawTranscribe(poolLoc, &tmp, sizeof(GenePool));

  00095	41 b8 50 00 00
	00		 mov	 r8d, 80			; 00000050H
  0009b	48 8d 55 10	 lea	 rdx, QWORD PTR tmp$[rbp]
  0009f	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR poolLoc$[rbp]
  000a6	e8 00 00 00 00	 call	 rawTranscribe

; 48   : 
; 49   : 	
; 50   : }

  000ab	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  000af	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:GenePool_ctor$rtcFrameData
  000b6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000bb	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000c2	48 33 cd	 xor	 rcx, rbp
  000c5	e8 00 00 00 00	 call	 __security_check_cookie
  000ca	48 8d a5 a0 01
	00 00		 lea	 rsp, QWORD PTR [rbp+416]
  000d1	5f		 pop	 rdi
  000d2	5e		 pop	 rsi
  000d3	5d		 pop	 rbp
  000d4	c3		 ret	 0
GenePool_ctor ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Repos\BarrelTest\tMutation.c
;	COMDAT GenePool_Create
_TEXT	SEGMENT
$T5 = 344
$T6 = 408
__$ReturnAddress$ = 496
mutations$ = 504
mutagens$ = 512
mutCount$ = 520
genCount$ = 528
GenePool_Create PROC					; COMDAT

; 35   : GenePool GenePool_Create(Mutation* mutations, Mutagen* mutagens, uint mutCount, uint genCount) {

$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	56		 push	 rsi
  00016	57		 push	 rdi
  00017	48 81 ec 00 02
	00 00		 sub	 rsp, 512		; 00000200H
  0001e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00023	48 8d 7c 24 30	 lea	 rdi, QWORD PTR [rsp+48]
  00028	b9 44 00 00 00	 mov	 ecx, 68			; 00000044H
  0002d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00032	f3 ab		 rep stosd
  00034	48 8b 8c 24 28
	02 00 00	 mov	 rcx, QWORD PTR [rsp+552]
  0003c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7F5695AE_tMutation@c
  00043	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   : 	return

  00048	8b 85 10 02 00
	00		 mov	 eax, DWORD PTR genCount$[rbp]
  0004e	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  00052	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  0005a	45 33 c9	 xor	 r9d, r9d
  0005d	41 b8 48 00 00
	00		 mov	 r8d, 72			; 00000048H
  00063	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07LBGHJJFE@Mutagen@
  0006a	48 8d 8d 58 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00071	e8 00 00 00 00	 call	 Bucket_Create
  00076	48 8b bd f0 01
	00 00		 mov	 rdi, QWORD PTR __$ReturnAddress$[rbp]
  0007d	48 8b f0	 mov	 rsi, rax
  00080	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00085	f3 a4		 rep movsb
  00087	8b 85 08 02 00
	00		 mov	 eax, DWORD PTR mutCount$[rbp]
  0008d	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  00091	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00099	45 33 c9	 xor	 r9d, r9d
  0009c	41 b8 08 00 00
	00		 mov	 r8d, 8
  000a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08PLJNIMIA@Mutation@
  000a9	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  000b0	e8 00 00 00 00	 call	 Bucket_Create
  000b5	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnAddress$[rbp]
  000bc	48 8d 79 20	 lea	 rdi, QWORD PTR [rcx+32]
  000c0	48 8b f0	 mov	 rsi, rax
  000c3	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000c8	f3 a4		 rep movsb
  000ca	c7 44 24 20 80
	00 00 00	 mov	 DWORD PTR [rsp+32], 128	; 00000080H
  000d2	45 33 c9	 xor	 r9d, r9d
  000d5	45 33 c0	 xor	 r8d, r8d
  000d8	ba 04 00 00 00	 mov	 edx, 4
  000dd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04EHNLIFAM@uint@
  000e4	e8 00 00 00 00	 call	 Barrel_ctor
  000e9	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnAddress$[rbp]
  000f0	48 89 41 40	 mov	 QWORD PTR [rcx+64], rax
  000f4	c7 44 24 20 80
	00 00 00	 mov	 DWORD PTR [rsp+32], 128	; 00000080H
  000fc	45 33 c9	 xor	 r9d, r9d
  000ff	45 33 c0	 xor	 r8d, r8d
  00102	ba 04 00 00 00	 mov	 edx, 4
  00107	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04EHNLIFAM@uint@
  0010e	e8 00 00 00 00	 call	 Barrel_ctor
  00113	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnAddress$[rbp]
  0011a	48 89 41 48	 mov	 QWORD PTR [rcx+72], rax
  0011e	48 8b 85 f0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnAddress$[rbp]

; 37   : 		(GenePool) {
; 38   : 			Bucket_Create("Mutagen", sizeof(Mutagen), NULL, 0, genCount),
; 39   : 			Bucket_Create("Mutation", sizeof(Mutation), NULL, 0, mutCount),
; 40   : 			Barrel_ctor("uint", sizeof(uint), NULL, 0, DEFAULT_POOL_INIT_CAPACITY),
; 41   : 			Barrel_ctor("uint", sizeof(uint), NULL, 0, DEFAULT_POOL_INIT_CAPACITY)
; 42   : 		};
; 43   : }

  00125	48 8b f8	 mov	 rdi, rax
  00128	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  0012c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:GenePool_Create$rtcFrameData
  00133	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00138	48 8b c7	 mov	 rax, rdi
  0013b	48 8d a5 d0 01
	00 00		 lea	 rsp, QWORD PTR [rbp+464]
  00142	5f		 pop	 rdi
  00143	5e		 pop	 rsi
  00144	5d		 pop	 rbp
  00145	c3		 ret	 0
GenePool_Create ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Repos\BarrelTest\tMutation.c
;	COMDAT Mutation_ctor
_TEXT	SEGMENT
tmp$ = 8
__$ArrayPad$ = 216
loc$ = 256
offset$ = 264
count$ = 272
Mutation_ctor PROC					; COMDAT

; 30   : void Mutation_ctor(Mutation* loc, uint offset, uint count) {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 7c 24 20	 lea	 rdi, QWORD PTR [rsp+32]
  00021	b9 0a 00 00 00	 mov	 ecx, 10
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00035	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003c	48 33 c5	 xor	 rax, rbp
  0003f	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00046	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7F5695AE_tMutation@c
  0004d	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 31   : 	Mutation tmp = Mutation_Create(loc, offset, count);

  00052	44 8b 85 10 01
	00 00		 mov	 r8d, DWORD PTR count$[rbp]
  00059	8b 95 08 01 00
	00		 mov	 edx, DWORD PTR offset$[rbp]
  0005f	8b 8d 00 01 00
	00		 mov	 ecx, DWORD PTR loc$[rbp]
  00065	e8 00 00 00 00	 call	 Mutation_Create
  0006a	48 89 45 08	 mov	 QWORD PTR tmp$[rbp], rax

; 32   : 	rawTranscribe(loc, &tmp, sizeof(Mutation));

  0006e	41 b8 08 00 00
	00		 mov	 r8d, 8
  00074	48 8d 55 08	 lea	 rdx, QWORD PTR tmp$[rbp]
  00078	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR loc$[rbp]
  0007f	e8 00 00 00 00	 call	 rawTranscribe

; 33   : }

  00084	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00088	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:Mutation_ctor$rtcFrameData
  0008f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00094	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0009b	48 33 cd	 xor	 rcx, rbp
  0009e	e8 00 00 00 00	 call	 __security_check_cookie
  000a3	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000aa	5f		 pop	 rdi
  000ab	5d		 pop	 rbp
  000ac	c3		 ret	 0
Mutation_ctor ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Repos\BarrelTest\tMutation.c
;	COMDAT Mutation_Create
_TEXT	SEGMENT
$S2$ = 8
__$ArrayPad$ = 216
offset$ = 256
count$ = 264
Mutation_Create PROC					; COMDAT

; 23   : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	55		 push	 rbp
  00009	57		 push	 rdi
  0000a	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00011	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00016	48 8d 7c 24 20	 lea	 rdi, QWORD PTR [rsp+32]
  0001b	b9 0a 00 00 00	 mov	 ecx, 10
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR [rsp+296]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c5	 xor	 rax, rbp
  00038	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7F5695AE_tMutation@c
  00046	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 24   : 	return

  0004b	8b 85 00 01 00
	00		 mov	 eax, DWORD PTR offset$[rbp]
  00051	89 45 08	 mov	 DWORD PTR $S2$[rbp], eax
  00054	8b 85 08 01 00
	00		 mov	 eax, DWORD PTR count$[rbp]
  0005a	89 45 0c	 mov	 DWORD PTR $S2$[rbp+4], eax
  0005d	48 8b 45 08	 mov	 rax, QWORD PTR $S2$[rbp]

; 25   : 		(Mutation) {
; 26   : 			offset,
; 27   : 			count
; 28   : 		};
; 29   : }

  00061	48 8b f8	 mov	 rdi, rax
  00064	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00068	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:Mutation_Create$rtcFrameData
  0006f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00074	48 8b c7	 mov	 rax, rdi
  00077	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0007e	48 33 cd	 xor	 rcx, rbp
  00081	e8 00 00 00 00	 call	 __security_check_cookie
  00086	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008d	5f		 pop	 rdi
  0008e	5d		 pop	 rbp
  0008f	c3		 ret	 0
Mutation_Create ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Repos\BarrelTest\tMutation.c
;	COMDAT Mutagen_ctor
_TEXT	SEGMENT
tmp$ = 16
i$4 = 116
$T5 = 344
tv81 = 424
__$ArrayPad$ = 432
loc$ = 480
name$ = 488
dataLoc$ = 496
defsLoc$ = 504
count$ = 512
Mutagen_ctor PROC					; COMDAT

; 13   : void Mutagen_ctor(Mutagen* loc, const char* name, BarrelNode** dataLoc, Property** defsLoc, uint count) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	56		 push	 rsi
  00016	57		 push	 rdi
  00017	48 81 ec f0 01
	00 00		 sub	 rsp, 496		; 000001f0H
  0001e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00023	48 8d 7c 24 30	 lea	 rdi, QWORD PTR [rsp+48]
  00028	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0002d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00032	f3 ab		 rep stosd
  00034	48 8b 8c 24 18
	02 00 00	 mov	 rcx, QWORD PTR [rsp+536]
  0003c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00043	48 33 c5	 xor	 rax, rbp
  00046	48 89 85 b0 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0004d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7F5695AE_tMutation@c
  00054	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 14   : 	Mutagen tmp = Mutagen_Create(name, dataLoc, defsLoc, count);

  00059	8b 85 00 02 00
	00		 mov	 eax, DWORD PTR count$[rbp]
  0005f	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00063	4c 8b 8d f8 01
	00 00		 mov	 r9, QWORD PTR defsLoc$[rbp]
  0006a	4c 8b 85 f0 01
	00 00		 mov	 r8, QWORD PTR dataLoc$[rbp]
  00071	48 8b 95 e8 01
	00 00		 mov	 rdx, QWORD PTR name$[rbp]
  00078	48 8d 8d 58 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  0007f	e8 00 00 00 00	 call	 Mutagen_Create
  00084	48 8d 4d 10	 lea	 rcx, QWORD PTR tmp$[rbp]
  00088	48 8b f9	 mov	 rdi, rcx
  0008b	48 8b f0	 mov	 rsi, rax
  0008e	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  00093	f3 a4		 rep movsb

; 15   : 	rawTranscribe(loc, &tmp, sizeof(Mutagen));

  00095	41 b8 48 00 00
	00		 mov	 r8d, 72			; 00000048H
  0009b	48 8d 55 10	 lea	 rdx, QWORD PTR tmp$[rbp]
  0009f	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR loc$[rbp]
  000a6	e8 00 00 00 00	 call	 rawTranscribe

; 16   : 
; 17   : 	for (int i = 0; i < loc->_propData._collection._count; i++) 

  000ab	c7 45 74 00 00
	00 00		 mov	 DWORD PTR i$4[rbp], 0
  000b2	eb 08		 jmp	 SHORT $LN4@Mutagen_ct
$LN2@Mutagen_ct:
  000b4	8b 45 74	 mov	 eax, DWORD PTR i$4[rbp]
  000b7	ff c0		 inc	 eax
  000b9	89 45 74	 mov	 DWORD PTR i$4[rbp], eax
$LN4@Mutagen_ct:
  000bc	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR loc$[rbp]
  000c3	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000c6	39 45 74	 cmp	 DWORD PTR i$4[rbp], eax
  000c9	73 50		 jae	 SHORT $LN3@Mutagen_ct

; 18   : 		*((BarrelNode**)Bucket_GetPtr(&(loc->_propData), i)) =

  000cb	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR loc$[rbp]
  000d2	48 83 c0 28	 add	 rax, 40			; 00000028H
  000d6	8b 55 74	 mov	 edx, DWORD PTR i$4[rbp]
  000d9	48 8b c8	 mov	 rcx, rax
  000dc	e8 00 00 00 00	 call	 Barrel_GetUnitPtr
  000e1	41 b9 80 00 00
	00		 mov	 r9d, 128		; 00000080H
  000e7	45 33 c0	 xor	 r8d, r8d
  000ea	33 d2		 xor	 edx, edx
  000ec	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  000f0	e8 00 00 00 00	 call	 Barrel_Sourced
  000f5	48 89 85 a8 01
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  000fc	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR loc$[rbp]
  00103	48 83 c1 08	 add	 rcx, 8
  00107	8b 55 74	 mov	 edx, DWORD PTR i$4[rbp]
  0010a	e8 00 00 00 00	 call	 Bucket_GetPtr
  0010f	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR tv81[rbp]
  00116	48 89 08	 mov	 QWORD PTR [rax], rcx
  00119	eb 99		 jmp	 SHORT $LN2@Mutagen_ct
$LN3@Mutagen_ct:

; 19   : 			Barrel_Sourced(((Property*)Barrel_GetUnitPtr(&(loc->_propDefs), i))->_type, NULL, 0, DEFAULT_POOL_INIT_CAPACITY);
; 20   : }

  0011b	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  0011f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:Mutagen_ctor$rtcFrameData
  00126	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0012b	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00132	48 33 cd	 xor	 rcx, rbp
  00135	e8 00 00 00 00	 call	 __security_check_cookie
  0013a	48 8d a5 c0 01
	00 00		 lea	 rsp, QWORD PTR [rbp+448]
  00141	5f		 pop	 rdi
  00142	5e		 pop	 rsi
  00143	5d		 pop	 rbp
  00144	c3		 ret	 0
Mutagen_ctor ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Repos\BarrelTest\tMutation.c
;	COMDAT Mutagen_Create
_TEXT	SEGMENT
$T5 = 344
$T6 = 408
__$ReturnAddress$ = 496
name$ = 504
dataLoc$ = 512
defsLoc$ = 520
count$ = 528
Mutagen_Create PROC					; COMDAT

; 5    : Mutagen Mutagen_Create(const char* name, BarrelNode** dataLoc, Property** defsLoc, uint count) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	56		 push	 rsi
  00016	57		 push	 rdi
  00017	48 81 ec 00 02
	00 00		 sub	 rsp, 512		; 00000200H
  0001e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00023	48 8d 7c 24 30	 lea	 rdi, QWORD PTR [rsp+48]
  00028	b9 44 00 00 00	 mov	 ecx, 68			; 00000044H
  0002d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00032	f3 ab		 rep stosd
  00034	48 8b 8c 24 28
	02 00 00	 mov	 rcx, QWORD PTR [rsp+552]
  0003c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7F5695AE_tMutation@c
  00043	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 6    : 	return

  00048	48 8b 85 f0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnAddress$[rbp]
  0004f	48 8b 8d f8 01
	00 00		 mov	 rcx, QWORD PTR name$[rbp]
  00056	48 89 08	 mov	 QWORD PTR [rax], rcx
  00059	8b 85 10 02 00
	00		 mov	 eax, DWORD PTR count$[rbp]
  0005f	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  00063	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  0006b	4c 8b 8d 00 02
	00 00		 mov	 r9, QWORD PTR dataLoc$[rbp]
  00072	41 b8 08 00 00
	00		 mov	 r8d, 8
  00078	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@FDLLLOLH@COLLECTION@
  0007f	48 8d 8d 58 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00086	e8 00 00 00 00	 call	 Bucket_Create
  0008b	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnAddress$[rbp]
  00092	48 8d 79 08	 lea	 rdi, QWORD PTR [rcx+8]
  00096	48 8b f0	 mov	 rsi, rax
  00099	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0009e	f3 a4		 rep movsb
  000a0	8b 85 10 02 00
	00		 mov	 eax, DWORD PTR count$[rbp]
  000a6	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  000aa	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  000b2	4c 8b 8d 08 02
	00 00		 mov	 r9, QWORD PTR defsLoc$[rbp]
  000b9	41 b8 08 00 00
	00		 mov	 r8d, 8
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08DDLBCDJK@PROPERTY@
  000c6	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  000cd	e8 00 00 00 00	 call	 Bucket_Create
  000d2	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnAddress$[rbp]
  000d9	48 8d 79 28	 lea	 rdi, QWORD PTR [rcx+40]
  000dd	48 8b f0	 mov	 rsi, rax
  000e0	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000e5	f3 a4		 rep movsb
  000e7	48 8b 85 f0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnAddress$[rbp]

; 7    : 		(Mutagen) {
; 8    : 			name,
; 9    : 			Bucket_Create("COLLECTION", sizeof(COLLECTION), dataLoc, 0, count),
; 10   : 			Bucket_Create("PROPERTY", sizeof(PROPERTY), defsLoc, 0, count)
; 11   : 		};
; 12   : }

  000ee	48 8b f8	 mov	 rdi, rax
  000f1	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  000f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:Mutagen_Create$rtcFrameData
  000fc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00101	48 8b c7	 mov	 rax, rdi
  00104	48 8d a5 d0 01
	00 00		 lea	 rsp, QWORD PTR [rbp+464]
  0010b	5f		 pop	 rdi
  0010c	5e		 pop	 rsi
  0010d	5d		 pop	 rbp
  0010e	c3		 ret	 0
Mutagen_Create ENDP
_TEXT	ENDS
END
